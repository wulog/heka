// Automatically generated by MockGen. DO NOT EDIT!
// Source: heka/pipeline (interfaces: StatAccumulator)

package pipelinemock

import (
	pipeline "heka/pipeline"
	gomock "github.com/rafrombrc/gomock/gomock"
)

// Mock of StatAccumulator interface
type MockStatAccumulator struct {
	ctrl     *gomock.Controller
	recorder *_MockStatAccumulatorRecorder
}

// Recorder for MockStatAccumulator (not exported)
type _MockStatAccumulatorRecorder struct {
	mock *MockStatAccumulator
}

func NewMockStatAccumulator(ctrl *gomock.Controller) *MockStatAccumulator {
	mock := &MockStatAccumulator{ctrl: ctrl}
	mock.recorder = &_MockStatAccumulatorRecorder{mock}
	return mock
}

func (_m *MockStatAccumulator) EXPECT() *_MockStatAccumulatorRecorder {
	return _m.recorder
}

func (_m *MockStatAccumulator) DropStat(_param0 pipeline.Stat) bool {
	ret := _m.ctrl.Call(_m, "DropStat", _param0)
	ret0, _ := ret[0].(bool)
	return ret0
}

func (_mr *_MockStatAccumulatorRecorder) DropStat(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DropStat", arg0)
}
