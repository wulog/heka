// Automatically generated by MockGen. DO NOT EDIT!
// Source: heka/pipeline (interfaces: Decoder)

package pipelinemock

import (
	pipeline "heka/pipeline"
	gomock "github.com/rafrombrc/gomock/gomock"
)

// Mock of Decoder interface
type MockDecoder struct {
	ctrl     *gomock.Controller
	recorder *_MockDecoderRecorder
}

// Recorder for MockDecoder (not exported)
type _MockDecoderRecorder struct {
	mock *MockDecoder
}

func NewMockDecoder(ctrl *gomock.Controller) *MockDecoder {
	mock := &MockDecoder{ctrl: ctrl}
	mock.recorder = &_MockDecoderRecorder{mock}
	return mock
}

func (_m *MockDecoder) EXPECT() *_MockDecoderRecorder {
	return _m.recorder
}

func (_m *MockDecoder) Decode(_param0 *pipeline.PipelinePack) ([]*pipeline.PipelinePack, error) {
	ret := _m.ctrl.Call(_m, "Decode", _param0)
	ret0, _ := ret[0].([]*pipeline.PipelinePack)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockDecoderRecorder) Decode(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Decode", arg0)
}
